-- CREATE database   xxl_job ;

CREATE TABLE XXL_JOB_QRTZ_JOB_DETAILS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL,
    IS_DURABLE VARCHAR(1) NOT NULL,
    IS_NONCONCURRENT VARCHAR(1) NOT NULL,
    IS_UPDATE_DATA VARCHAR(1) NOT NULL,
    REQUESTS_RECOVERY VARCHAR(1) NOT NULL,
    JOB_DATA bytea NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE XXL_JOB_QRTZ_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME bigint NULL,
    PREV_FIRE_TIME bigint NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME bigint NOT NULL,
    END_TIME bigint NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR integer NULL,
    JOB_DATA bytea NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
        REFERENCES XXL_JOB_QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE XXL_JOB_QRTZ_SIMPLE_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT bigint NOT NULL,
    REPEAT_INTERVAL bigint NOT NULL,
    TIMES_TRIGGERED bigint NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES XXL_JOB_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE XXL_JOB_QRTZ_CRON_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(200) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES XXL_JOB_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE XXL_JOB_QRTZ_SIMPROP_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 VARCHAR(1) NULL,
    BOOL_PROP_2 VARCHAR(1) NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
    REFERENCES XXL_JOB_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE XXL_JOB_QRTZ_BLOB_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA bytea NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES XXL_JOB_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE XXL_JOB_QRTZ_CALENDARS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL,
    CALENDAR bytea NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);

CREATE TABLE XXL_JOB_QRTZ_PAUSED_TRIGGER_GRPS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);

CREATE TABLE XXL_JOB_QRTZ_FIRED_TRIGGERS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME bigint NOT NULL,
    SCHED_TIME bigint NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT VARCHAR(1) NULL,
    REQUESTS_RECOVERY VARCHAR(1) NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);

CREATE TABLE XXL_JOB_QRTZ_SCHEDULER_STATE
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME bigint NOT NULL,
    CHECKIN_INTERVAL bigint NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);

CREATE TABLE XXL_JOB_QRTZ_LOCKS
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL,
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);



CREATE TABLE  XXL_JOB_QRTZ_TRIGGER_INFO  (
   id  bigserial NOT NULL ,
   job_group  bigint NOT NULL ,
   job_cron  varchar(128) NOT NULL ,
   job_desc  varchar(255) NOT NULL,
   add_time  timestamp DEFAULT NULL,
   update_time  timestamp DEFAULT NULL,
   author  varchar(64) DEFAULT NULL ,
   alarm_email  varchar(255) DEFAULT NULL ,
   executor_route_strategy  varchar(50) DEFAULT NULL ,
   executor_handler  varchar(255) DEFAULT NULL ,
   executor_param  varchar(512) DEFAULT NULL ,
   executor_block_strategy  varchar(50) DEFAULT NULL ,
   executor_timeout  bigint NOT NULL DEFAULT '0' ,
   executor_fail_retry_count  bigint NOT NULL DEFAULT '0' ,
   glue_type  varchar(50) NOT NULL ,
   glue_source  text ,
   glue_remark  varchar(128) DEFAULT NULL ,
   glue_updatetime  timestamp DEFAULT NULL ,
   child_jobid  varchar(255) DEFAULT NULL ,
  PRIMARY KEY ( id )
) ;

CREATE TABLE  XXL_JOB_QRTZ_TRIGGER_LOG  (
   id  bigserial NOT NULL ,
   job_group  bigint NOT NULL ,
   job_id  bigint NOT NULL ,
   executor_address  varchar(255) DEFAULT NULL ,
   executor_handler  varchar(255) DEFAULT NULL ,
   executor_param  varchar(512) DEFAULT NULL ,
   executor_sharding_param  varchar(20) DEFAULT NULL ,
   executor_fail_retry_count  bigint NOT NULL DEFAULT 0 ,
   trigger_time  timestamp DEFAULT NULL ,
   trigger_code  bigint NOT NULL ,
   trigger_msg  text ,
   handle_time  timestamp DEFAULT NULL ,
   handle_code  bigint NOT NULL ,
   handle_msg  text ,
  PRIMARY KEY ( id )
--   KEY  I_trigger_time  ( trigger_time )
) ;
create index I_trigger_time on XXL_JOB_QRTZ_TRIGGER_LOG(trigger_time);

CREATE TABLE  XXL_JOB_QRTZ_TRIGGER_LOGGLUE  (
   id  bigserial NOT NULL ,
   job_id  bigint NOT NULL ,
   glue_type  varchar(50) DEFAULT NULL ,
   glue_source  text ,
   glue_remark  varchar(128) NOT NULL ,
   add_time  timestamp NULL DEFAULT NULL,
   update_time timestamp default now() not null,
  PRIMARY KEY ( id )
) ;

CREATE TABLE XXL_JOB_QRTZ_TRIGGER_REGISTRY (
   id  bigserial NOT NULL ,
   registry_group  varchar(255) NOT NULL,
   registry_key  varchar(255) NOT NULL,
   registry_value  varchar(255) NOT NULL,
   update_time  timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ( id )
) ;

CREATE TABLE  XXL_JOB_QRTZ_TRIGGER_GROUP  (
   id  bigserial NOT NULL ,
   app_name  varchar(64) NOT NULL ,
   title  varchar(12) NOT NULL ,
   "order"  int NOT NULL DEFAULT 0 ,
   address_type  int NOT NULL DEFAULT 0 ,
   address_list  varchar(512) DEFAULT NULL ,
  PRIMARY KEY ( id )
) ;



INSERT INTO  XXL_JOB_QRTZ_TRIGGER_GROUP ( id ,  app_name ,  title ,  "order" ,  address_type ,  address_list ) VALUES (1, 'xxl_job_executor_sample', '示例执行器', 1, 0, NULL);
INSERT INTO  XXL_JOB_QRTZ_TRIGGER_INFO ( id ,  job_group ,  job_cron ,  job_desc ,  add_time ,  update_time ,  author ,  alarm_email ,  executor_route_strategy ,  executor_handler ,  executor_param ,  executor_block_strategy ,  executor_timeout ,  executor_fail_retry_count ,  glue_type ,  glue_source ,  glue_remark ,  glue_updatetime ,  child_jobid ) VALUES (1, 1, '0 0 0 * * ? *', '测试任务1', '2018-11-03 22:21:31', '2018-11-03 22:21:31', 'XXL', '', 'FIRST', 'demoJobHandler', '', 'SERIAL_EXECUTION', 0, 0, 'BEAN', '', 'GLUE代码初始化', '2018-11-03 22:21:31', '');

commit;

